--j to toggle ui to enter cursor [ IMAGE ID ]
--enter custom cursors to the cursors table

repeat wait() until game.Players.LocalPlayer

getgenv().cursorUiToggleKey = Enum.KeyCode.J

getgenv().currentCursor = getgenv().cursors[1]
game.Players.LocalPlayer:GetMouse().Icon = getgenv().currentCursor
game.Players.LocalPlayer:GetMouse():GetPropertyChangedSignal("Icon"):Connect(function()
    game.Players.LocalPlayer:GetMouse().Icon = getgenv().currentCursor
end)

local counter = 1

game:GetService("UserInputService").InputBegan:Connect(function(inp,typing)
    if not typing then
        if inp.KeyCode == Enum.KeyCode.X then
            counter = counter+1
            if counter > #getgenv().cursors then
                counter = 1
            end
            getgenv().currentCursor = getgenv().cursors[counter]
            game.Players.LocalPlayer:GetMouse().Icon = getgenv().currentCursor
        end
    end
end)

-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local BG = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TextBox = Instance.new("TextBox")
local TextLabel = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")

--Properties:

ScreenGui.Name = " "
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

BG.Name = "BG"
BG.Parent = ScreenGui
BG.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
BG.Position = UDim2.new(0.134248704, 0, 0.578688502, 0)
BG.Size = UDim2.new(0.112128146, 0, 0.0737705082, 0)

UICorner.CornerRadius = UDim.new(0, 7)
UICorner.Parent = BG

TextBox.Parent = BG
TextBox.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(1.03801284e-07, 0, 0.323529333, 0)
TextBox.Size = UDim2.new(1.00000012, 0, 0.676470459, 0)
TextBox.Font = Enum.Font.Nunito
TextBox.PlaceholderText = "enter cursor IMAGE ID ..."
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 14.000

TextLabel.Parent = BG
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(1.03801284e-07, 0, 0, 0)
TextLabel.Size = UDim2.new(1.00000012, 0, 0.323529303, 0)
TextLabel.Font = Enum.Font.Nunito
TextLabel.Text = "cursor changer"
TextLabel.TextColor3 = Color3.fromRGB(179, 179, 179)
TextLabel.TextSize = 14.000

ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.Position = UDim2.new(0.0579710156, 0, 0.0754098371, 0)
ImageLabel.Size = UDim2.new(0, 1, 0, 1)
ImageLabel.Visible = false
ImageLabel.Image = ""
BG.Visible = false
game:GetService("UserInputService").InputBegan:Connect(function(inp,typing)
    if not typing then
        if inp.KeyCode == getgenv().cursorUiToggleKey then
            BG.Visible = not BG.Visible
        end
    end
end)

TextBox.FocusLost:Connect(function(enterPressed, inputThatCausedFocusLost)
	if enterPressed then
		if TextBox.Text ~= "" then
			ImageLabel.Image = TextBox.Text
			wait()
			local id = "rbxassetid://"..TextBox.Text
			getgenv().currentCursor = id
			game.Players.LocalPlayer:GetMouse().Icon = getgenv().currentCursor
			TextBox.Text = ""
		end
	end
end)

--Draggable
local UserInputService = game:GetService("UserInputService")

local gui = BG
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
